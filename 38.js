// 38. Count and say

/**
 * @param {number} n
 * @return {string}
 */

var countAndSay = function(n) {

    let str = "1";

    while (n>1) {

        let newStr = "";
        let count = 0;
        let say = str[0];

        for (let i=0; i<str.length; i++) {

            if (str[i] === say) {
                count++
            } else {
                newStr += count + say
                count = 1;
                say = str[i]
            }
        }
        
        str = newStr + count + say

        n--

    }

    return str


};


// var countAndSay = function(n) {
    
//     // Initialize the sequence with the first term
//     let str = '1';
    
//     // Iterate to generate the nth term in the sequence
//     for (let i=1; i<n; i++) {
//         debugger;
//         // Split the current term into an array of individual digits
//         let strArray = str.split('');
//         str = ''; // Reset the current term

//         let count = 1;
        
//         // Loop through the digits of the current term
//         for (let j=0; j < strArray.length; j++) {

//             // Check if the next digit is different
//             if(strArray[j] !== strArray[j+1]) {
//                 // If different, append the count and digit to the new term
//                 str += count + strArray[j];
//                 count = 1; // Reset count for the new digit
//             } else {
//                 count++; // Increment count for consecutive digits
//             }
//         }
//     }

//     return str; // Return the nth term in the "Count and Say" sequence

// };



// seq = 1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, â€¦ 
// The first term is "1"
// Second term is "11", generated by reading first term as "One 1" 
// (There is one 1 in previous term)
// Third term is "21", generated by reading second term as "Two 1"
// Fourth term is "1211", generated by reading third term as "One 2 One 1" 
// and so on